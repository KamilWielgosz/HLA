#include <cstdlib>
#include <iostream>
#include <queue>

using namespace std;

//Zadanie 1
const int V=6;
queue <int> Q;

int G[V][V]= {0,1,0,0,1,0,
              0,0,1,0,0,1,
 			  0,1,0,0,1,0, 
			  0,0,1,0,0,1, 
			  1,0,0,0,0,0, 
			  1,0,0,1,0,0};
void bfs(int i){

     cout<<"BFS ("<<i<<"):"<<endl;
	 
     int visited[V];
	 
     for(int j=0; j<V; j++)
     visited[j]=0;
	 
     visited[i]=1;
	 
     cout<<i<<" ";
	 
     Q.push(i);
	 
     while(Q.empty()!=true)
     {
               int u=Q.front();
               Q.pop();
			   
               for (int v=0; v<V; v++)
			   
               if (G[u][v]==1)
			   
               if (visited[v]==0)
               {
                                 visited[v]=1;
                                 cout<<v<<" ";
                                 Q.push(v);
               }
			   
     }
     cout<<endl;
}
void zadanie1(){
 bfs(0);
 bfs(5);
 cout<<endl;
}
//Zadanie 2
struct el
{
       string wart;
       el *next;
       };

const int H = 7; //rozmiar tablicy z haszowaniem
el *t[H];

int h(string dane){

    int f=0;
	
    int d=dane.length();
	
    for(int i=0; i<d; i++)
    f=f+int(dane[i])-96; 
	
    f=f%7;
	
    return(f);
	
    } //funkcja haszująca
void dodaj(string dane){

     int i=h(dane); 
	 
     el* p=new el;
	 
     p->next=t[i];
	 
     p->wart=dane;
	 
     t[i]=p;
     }
void printH(){
     for(int i=0; i<H; i++)
     {
      cout<<i<<") ";
	  
      el* p=new el;
	  
      p=t[i];
	  
      while (p!=NULL)
      {
            cout<<p->wart<<" ";
            p=p->next;
            }
            cout<<endl;
      }
	  
      cout<<endl;
     } //wydruk wszystkich danych z tablicy z haszowaniem
void zadanie2(){
for (int j=0; j<H; j++)
t[j]=NULL;

printH();
dodaj("jan"); dodaj("anna"); dodaj("piotr"); dodaj("pawel"); dodaj("ewa"); dodaj("jacek"); printH();
dodaj("julia"); dodaj("janek"); dodaj("ania"); dodaj("ewa"); dodaj("damian"); dodaj("ala"); printH();
}

int main(int argc, char *argv[]){

 cout<<"Zadanie 1"<<endl; zadanie1();
 cout<<"Zadanie 2"<<endl; zadanie2();
 system("PAUSE"); //proszę NIE usuwać tego wywołania
 
 return EXIT_SUCCESS;
}