program ConstDemo;
#include("stdlib.hhf");

const
   MemToAllocate := 4_000_000;
   NumDWords     := MemToAllocate div 4;
   MisalignBy    := 62;
   
   MainRepetitions := 10000;
   DataRepetitions := 999_900;
   
   CacheLineSize   := 16;
   
begin ConstDemo;

    console.cls();
	stdout.put
	(
	   "Wyrownanie danych w pamieci", nl,
	   nl,
	   "Korzystajac z zegarka (albo stopera), zmierz czas dzialani", nl
	   "programu celem okreslenia liczby sekund, jakie zajmuje", nl
	   "wykonanie jego kodu.", nl
	   nl
	   "Aby rozpoczac test, nacisnij Enter:"
	);
	
	//Przydziel tyle pamieci dynamicznej, aby przydzielony obszar
	//na pewno nie zmiescil sie w pamieci podrecznej procesora.
	//Uwaga: najlepiej, aby komputer dysponowal przynajmniej czterema
	//megabajtami wolnej pamieci operacyjnej, inaczej pomair czasu wykonania
	//nie bedzie reprezentowany z powodu mechanizmu pamieci wirtualnej.
	
	mem.alloc(MemToAllocate);
	
	//Wyzeruj przydzielony obszar (glownym zadaniem tej petli jest jednak
	//sprawdzenie, czy system przydzielil rzeczywiscie calosc zadanego obszaru).
	
	mov(NumDWords, ecx);
	repeat
	
	   dec(ecx);
	   mov(0, (type dword [eax+ecx*4]));
	until(!ecx); // Powtarzaj, az ECX = 0
	
	  //w porzadku, poczekaj na nacisniecie klawisza Enter
	  
	stdin.readLn();
	
	//Uwaga: poniewaz procesory sa coraz szybsze, aby wyniki byly znaczace,
	//mozna zwiekszyc wartosc wykorzystywanych nizej stalych.
	//Czas wykonywania ponizszych petli powinien siegac kilkudziesieciu sekund.
	
	mov(MainRepetitions, edx);
	add(MisalignBy, eax); //Wymuszenie nieoptymalnego wyrownania danych
	
	repeat
	    mov(DataRepetitions, ecx);
		align(CacheLineSize);
		repeat
		   sub(4, ecx);
		   mov([eax+ecx*4], ebx);
		   mov([eax+ecx*4], ebx);
		   mov([eax+ecx*4], ebx);
		   mov([eax+ecx*4], ebx);
		until(!ecx);
		dec(edx);
    until(!edx); //Powtarzaj, az EDX osiagnie zero
	
	stdout.put(stdio.bell, "Zatrzymaj stoper i zapisz czas wykonywania", nl, nl);
	
	//Pomiar czasu dostepu do danych wyrownanych
	
	stdout.put
	(
	   "Nacisnij ponownie klawisz Enter, aby rozpoczac pomiar dostepu wyrownanego:"
	);
	
	stdin.readLn();
	
	//Gdyby nie definicje MainRepetitions i MisalignBy, wartosci sterujace petla
	//trzeba by zmieniac rowniez tutaj!
	
	mov(MainRepetitions, edx);
	sub(MisalignBy, eax); //Przywrocenie optymalnego wyrownania.
	repeat
	   mov(DataRepetitions, ecx);
	   align(CacheLineSize);
	   repeat
	      sub(4, ecx);
		  mov([eax+ecx*4], ebx);
		  mov([eax+ecx*4], ebx);
		  mov([eax+ecx*4], ebx);
		  mov([eax+ecx*4], ebx);
	   until(!ecx);
	   dec(edx);
	until(!edx); //Powtarzaj, az EDX osiagnie zero
	
	stdout.put(stdio.bell, "Zatrzymaj stoper i zapisz czas wykonywania", nl, nl);
	mem.free(eax);
	
end ConstDemo;
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
    
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	